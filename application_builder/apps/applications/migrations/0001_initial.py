# Generated by Django 5.0.3 on 2024-03-13 19:17

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cities', '0001_initial'),
        ('professions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CandidateRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education', models.CharField(choices=[('not_required', 'Не имеет значения'), ('higher', 'Высшее'), ('vocational', 'Среднее профессиональное')])),
                ('experience', models.CharField(choices=[('not_required', 'Не имеет значения'), ('no_experience', 'Нет опыта'), ('1-3_years', 'От 1 года до 3 лет'), ('3-6_years', 'От 3 до 6 лет'), ('over_6_years', 'Более 6 лет')])),
                ('driving_skills', models.CharField(choices=[('B', 'Категория B, легковые автомобили'), ('C', 'Категория C, грузовые автомобили'), ('D', 'Категория D, автобусы'), ('M', 'Категория M, мопеды'), ('A', 'Категория A, мотоциклы')])),
                ('has_medical_sertificate', models.BooleanField(default=False)),
                ('has_photo', models.BooleanField(default=False)),
                ('core_skills', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='JobInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment_type', models.CharField(choices=[('full-time', 'Полная занятость'), ('part-time', 'Частичная занятость'), ('project', 'Проект'), ('shift_work', 'Вахта'), ('traineeship', 'Стажировка')])),
                ('schedule', models.CharField(choices=[('full-day', 'Полный день'), ('part-time', 'Неполный день'), ('5_on_2_off', '5/2'), ('2_on_2_off', 'Два через два'), ('24_h_on_72_h_off', 'Сутки / трое'), ('flexible', 'Свободный'), ('shift_work', 'Вахта')])),
                ('work_model', models.CharField(choices=[('office', 'Офис'), ('remote', 'Удаленный'), ('hybrid', 'Гибрид')])),
                ('contract_type', models.CharField(choices=[('contract', 'Трудовой договор'), ('civil-personal_contract', 'ГПХ'), ('individual_entrepreneurship', 'ИП'), ('self-employed', 'Самозанятый'), ('holding_multiple_positions', 'Совместительство')])),
                ('working_conditions', models.CharField(choices=[('VMI', 'ДМС'), ('fitness', 'Фитнес'), ('meal_compensation', 'Оплата питания'), ('free_parking', 'Бесплатная парковка'), ('mobile_phone_compensation', 'Оплата мобильной связи'), ('transportation_compensation', 'Оплата проезда'), ('language_training', 'Языковые курсы'), ('professional_training', 'Профессиональные курсы'), ('from_age_14', 'Подходит подросткам с 14 лет'), ('for_people_with_disabilities', 'Подходит людям с ограниченными возможностями')])),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField()),
                ('salary', models.IntegerField()),
                ('number_of_employees', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('start_working', models.CharField(choices=[('tomorrow', 'Сможет приступить завтра'), ('in_week', 'В течение недели'), ('in_month', 'В течение месяца'), ('not_hurry', 'Не спешу с поиском')])),
                ('number_of_recruiters', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField()),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cities.city')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professions.profession')),
            ],
        ),
    ]
